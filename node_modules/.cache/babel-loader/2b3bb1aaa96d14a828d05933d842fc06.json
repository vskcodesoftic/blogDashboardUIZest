{"ast":null,"code":"import _slicedToArray from \"/Users/codesoftic/Downloads/Zest-Package-1.1.0/zestreact-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/codesoftic/Downloads/Zest-Package-1.1.0/zestreact-app/src/shared/hooks/auth-hook.js\";\nimport React from 'react';\nimport { useState, useCallback, useEffect } from 'react';\nimport { Redirect, useHistory } from \"react-router-dom\";\nvar logoutTimer;\nexport var useAuth = function useAuth() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tokenExpirationDate = _useState4[0],\n      setTokenExpirationDate = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userId = _useState6[0],\n      setUserId = _useState6[1];\n\n  var login = useCallback(function (uid, token, expirationDate) {\n    setToken(token);\n    setUserId(uid);\n    var tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n  }, []);\n\n  var Re = function Re() {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  };\n\n  var logout = useCallback(function () {\n    setToken(null);\n    window.location = \"https://www.filmfxstudio.com\";\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(function () {\n    if (token && tokenExpirationDate) {\n      var remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n  useEffect(function () {\n    var storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  return {\n    token: token,\n    login: login,\n    logout: logout,\n    userId: userId\n  };\n};","map":{"version":3,"sources":["/Users/codesoftic/Downloads/Zest-Package-1.1.0/zestreact-app/src/shared/hooks/auth-hook.js"],"names":["React","useState","useCallback","useEffect","Redirect","useHistory","logoutTimer","useAuth","token","setToken","tokenExpirationDate","setTokenExpirationDate","userId","setUserId","login","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","Re","logout","window","location","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useCallback, useEffect } from 'react';\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n\nconst Re =()=> {\n  return <Redirect to=\"/\" />\n}\n\n  const logout = useCallback(() => {\n    \n    setToken(null);\n    window.location = \"https://www.filmfxstudio.com\";\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n    \n    \n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};"]},"metadata":{},"sourceType":"module"}